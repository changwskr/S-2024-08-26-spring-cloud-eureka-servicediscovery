● spring.application.name=discoveryservice
● spring.cloud.config.name=ecommerce
● spring.cloud.config.uri=http://127.0.0.1:8888

●유레카 서비스를 이용하기 위한 어노테이션
(메인프로그림)
@EnableDiscoveryClient
@EnableEurekaServer

● 서버의 포트를 지정하지 않고 랜덤하게 기동할 경우 - 즉 여러개의 마이크로서비스를 기동가능하다.
(application.xml)
server:
  port: 0


//========================



● 마이크로서비스 기동시 특정포트로 해서 기동하고자 할 경우
(이클립스) run as > run configuration
VM 아큐먼트 주입 : -Dserver.port=9002

● 이클립스 터미널 사용방법
(방법) 프로젝트에서 오른쪽마우스 클릭>show in

● 메이븐을 이용하여 마이크로서비스 기동
(이것을 위해서는 기동하고자 하는 프로젝트 터미널에서 기동한다.)
(터미널) mvn spring-boot:run -Dspring-boot.run.jvmArguements='-Dserver.port=9003'
           이나
           mvn spring-boot:run 으로 하게 되면 기본정의된 포트로 기동된다.

● 윈도우 명령창에서 마이크로서비스 기동
(방법) (주의사항은 도스창에서 실행하면 되는데 파워쉘에서는 안됨)
$ cd C:\WSJ_EX\01.workspace\2022-11-13-spring-cloud-eureka-userservice
$ mvn clean compile package (이것을 통해 실제 jar 생성)
$ ls -l ./target/*.jar
-- user-service-0.0.1-spring_cloud_msa.jar
$ java -jar -Dserver.port=9004 ./target/user-service-0.0.1-spring_cloud_msa.jar

● mvn package를 통해 생성된 jar파일의 버전은 어떻게 관리되나
(확인) user-service-0.0.1-spring cloud msa.jar
(pom.xml)
	<artifactId>user-service</artifactId>
	<version>0.0.1-spring cloud msa</version>
	두개의 정보를 합쳐놓은것이 .jar파일의 이름이 된다.

● 마이크로서비스를 다양하게 기동하는 방법
   - mvn 활용해서 
   - cmd 창에서
   - 이클립스의 run환경 조정으로
   가능

● 어려운점 이렇게 실행할때 마다 포트를 주입하면 힘들겠지
   그럼 어떤 방법이 있을까
(application.xml)
server:
  port: 0
  요것이다.

● 마이크로서비스의 인스턴스를 다르게 정의할 경우
   그리고 이렇게 해야 다양한 인스턴스명을 생성가능하다. 방식은 다음과 같다.
(application.xml)  
  eureka:
  instance:
    hostname: localhost  
    instance-id: ${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id:${random.value}}
    
    ${spring.cloud.client.hostname}=host.docker.internal
    ${spring.application.name}=user-service
    ${spring.application.instance_id:${random.value}}=651d7974cc0c8888ce3c10097d81bcb0
  
  
   

	